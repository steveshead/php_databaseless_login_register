<?php
$page_title = "Forgot Password - Login System";
// Start session in header.php
require_once 'header.php';

// Check if user is already logged in
if (isset($_SESSION['username'])) {
    header("Location: dashboard.php");
    exit();
}

// Initialize variables
$email = "";
$success = $error = "";

// Generate CSRF token if not exists
if (!isset($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = md5(uniqid(mt_rand(), true));
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Verify CSRF token
    if (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {
        $error = "Security verification failed. Please try again.";
    } else {
        // Get form data
        $email = trim($_POST["email"]);

        // Validate input
        if (empty($email)) {
            $error = "Email is required";
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error = "Invalid email format";
        } else {
            // Check if email exists in users.json
            $users_file = "users.json";
            $user_found = false;
            $username = "";

            if (file_exists($users_file)) {
                $users_json = file_get_contents($users_file);
                $users = json_decode($users_json, true);

                foreach ($users as $key => $user) {
                    if ($user["email"] === $email) {
                        $user_found = true;
                        $username = $user["username"];

                        // Generate reset token (compatible with older PHP versions)
                        $crypto_strong = false;
                        $token_bytes = openssl_random_pseudo_bytes(32, $crypto_strong);
                        // Ensure the generated bytes are cryptographically strong
                        if ($crypto_strong === false) {
                            // If not strong, use a fallback method
                            $token_bytes = '';
                            for ($i = 0; $i < 32; $i++) {
                                $token_bytes .= chr(mt_rand(0, 255));
                            }
                        }
                        $token = bin2hex($token_bytes);
                        $expires = time() + 3600; // Token expires in 1 hour

                        // Store token in user data
                        $users[$key]["reset_token"] = $token;
                        $users[$key]["reset_expires"] = $expires;

                        // Save updated users data
                        file_put_contents($users_file, json_encode($users, JSON_PRETTY_PRINT));

                        // Create reset link
                        $reset_link = "https://" . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']) . "/reset_password.php?token=" . urlencode($token);

                        // Send email with reset link
                        $to = $email;
                        $subject = "Password Reset Request";
                        $message = "Hello $username,\n\n";
                        $message .= "You have requested to reset your password. Please click the link below to reset your password:\n\n";
                        $message .= $reset_link . "\n\n";
                        $message .= "This link will expire in 1 hour.\n\n";
                        $message .= "If you did not request this password reset, please ignore this email.\n\n";
                        $message .= "Regards,\nLogin System Team";
                        $headers = "From: noreply@loginsystem.com\r\n";

                        // Try to send email
                        $mail_sent = mail($to, $subject, $message, $headers);

                        // If mail fails, log the message to a file as a fallback
                        if (!$mail_sent) {
                            $log_file = "password_reset_requests.log";
                            $log_entry = date("Y-m-d H:i:s") . " - Email: $email, Username: $username, Reset Link: $reset_link\n";
                            file_put_contents($log_file, $log_entry, FILE_APPEND);
                        }

                        // Show success message regardless of mail function success
                        $success = "If your email address exists in our database, you will receive a password recovery link at your email address in a few minutes.";
                        $email = ""; // Clear form field
                        break;
                    }
                }

                // For security reasons, don't reveal if email exists or not
                if (!$user_found) {
                    $success = "If your email address exists in our database, you will receive a password recovery link at your email address in a few minutes.";
                    $email = ""; // Clear form field
                }
            } else {
                // For security reasons, don't reveal if users.json doesn't exist
                $success = "If your email address exists in our database, you will receive a password recovery link at your email address in a few minutes.";
                $email = ""; // Clear form field
            }
        }
    }
}
?>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-5">
                <div class="card shadow-sm">
                    <div class="card-body p-4">
                        <h1 class="card-title text-center mb-4">Forgot Password</h1>
                        <p class="text-center mb-4">Enter your email address and we'll send you a link to reset your password.</p>

                        <?php if (!empty($success)): ?>
                            <div class="alert alert-success text-center"><?php echo $success; ?></div>
                        <?php endif; ?>

                        <?php if (!empty($error)): ?>
                            <div class="alert alert-danger text-center"><?php echo $error; ?></div>
                        <?php endif; ?>

                        <form action="forgot_password.php" method="post">
                            <!-- CSRF Protection -->
                            <input type="hidden" name="csrf_token" value="<?php echo $_SESSION['csrf_token']; ?>">
                            <div class="mb-3">
                                <label for="email" class="form-label">Email Address</label>
                                <input type="email" class="form-control" id="email" name="email" value="<?php echo htmlspecialchars($email); ?>" required>
                            </div>
                            <div class="d-grid gap-2 mb-3">
                                <button type="submit" class="btn btn-primary">Send Reset Link</button>
                            </div>
                            <p class="text-center">Remember your password? <a href="login.php">Back to Login</a></p>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

<?php require_once 'footer.php'; ?>
